//better 0(n^2)
#include <bits/stdc++.h> 
long long maxSubarraySum(int arr[], int n)
{
    
    long long maxsum=INT_MIN;
    for(int i=0;i<n;i++){
        long long s=0;
        for(int j=i;j<n;j++){
            s+=arr[j];
             maxsum=max(s,maxsum);   
        }
       
    }
    return maxsum;
}
//optimal kadane's algo
#include <bits/stdc++.h> 
long long maxSubarraySum(int arr[], int n)
{
    
    long long maxi=INT_MIN;
    long long sum=0;
    for(int i=0;i<n;i++){
        sum+=arr[i];
        if(sum<0){
            sum=0;
        }
        if(sum>maxi){
            maxi=sum;
        }
    }
    return maxi;
}
